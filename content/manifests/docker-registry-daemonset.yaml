apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: docker-registry-daemonset
  namespace: kube-system
  labels:
    k8s-app: docker-registry-daemonset
spec:
  selector:
    matchLabels:
      name: docker-registry-daemonset
  template:
    metadata:  
      labels:
        k8s-app: docker-registry-daemonset
        name: docker-registry-daemonset
    spec:
      nodeSelector:
        node-role.kubernetes.io/master: ""
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      terminationGracePeriodSeconds: 10
      containers:
      - name: docker-registry-daemonset
        image: registry:2
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
          hostPort: 5000
        securityContext:
          privileged: true        
        env:
        - { name: REGISTRY_HTTP_TLS_CERTIFICATE, value: /certs/acc.io/acc.io.crt }
        - { name: REGISTRY_HTTP_TLS_KEY, value: /certs/acc.io/acc.io.key }
        - { name: REGISTRY_AUTH, value: htpasswd }
        - { name: REGISTRY_AUTH_HTPASSWD_PATH, value: /auth/htpasswd }
        - { name: REGISTRY_AUTH_HTPASSWD_REALM, value: Registry Realm }
        volumeMounts:
        - name: registry-auth
          mountPath: /auth
        - name: registry-certs
          mountPath: /certs
        - name: registry-data
          mountPath: /var/lib/registry
      volumes:
        - name: registry-auth
          hostPath: { path: /home/acc-server-admin/auth, type: Directory }
        - name: registry-certs
          hostPath: { path: /home/acc-server-admin/certs, type: Directory }
        - name: registry-data
          hostPath: { path: /home/acc-server-admin/registry-data, type: Directory }
